version: "3.8"
services:
  # PHP Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ${APP_SLUG}_php
    restart: unless-stopped
    environment:
      SERVICE_NAME: ${APP_SLUG}_php
      SERVICE_TAGS: ${APP_ENV}
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app_network
    command: /var/www/entrypoint.sh

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: ${APP_SLUG}_nginx
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network

  # Nginx Reverse Proxy Service
  nginx_proxy:
    image: nginx:alpine
    container_name: ${APP_SLUG}_nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/reverse-proxy.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network
    depends_on:
      - php

  # Mariadb Service
  database.local:
    image: mysql:latest
    container_name: ${APP_SLUG}_database
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: ${APP_ENV}
      SERVICE_NAME: ${APP_SLUG}_database
    volumes:
      - ./storage-db:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app_network

  # Redis service
  redis.local:
    image: "redis:alpine"
    container_name: ${APP_SLUG}_redis
    ports:
      - "6379:6379"
    networks:
      - app_network

# Docker Networks

networks:
  app_network:
    driver: bridge

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
